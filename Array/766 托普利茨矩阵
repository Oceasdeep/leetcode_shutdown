题目：
    如果一个矩阵的每一方向由左上到右下的对角线上具有相同元素，那么这个矩阵是托普利茨矩阵。
    给定一个 M x N 的矩阵，当且仅当它是托普利茨矩阵时返回 True。
  示例 1:
    输入: 
    matrix = [
              [1,2,3,4],
              [5,1,2,3],
              [9,5,1,2]
            ]
    输出: True
  解释:
    在上述矩阵中, 其对角线为:"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]"。
    各条对角线上的所有元素均相同, 因此答案是True。
    
  示例 2:
    输入:
      matrix = [
                [1,2],
                [2,2]
               ]
    输出: False
  解释: 
      对角线"[1, 2]"上的元素不同。


思路：
    对于每一行元素来说，首尾元素与前行无关（相当于新添加都元素），同时前行都尾元素与本行无关（想当与删除尾元素）。
    由此可见，只要检查每一行除尾元素都前面元素，和下一行对应元素是否相等即可。
    
    
代码：
    class Solution {
    public:
      bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        if (matrix.size()==1||matrix[0].size()==1) {  //特殊情况独行或者独列
            return true;
        }
        for (int i=0; i!=matrix.size()-1; ++i) {  //i代表行数,只用检查到倒数第二行
            for (int j=0; j!=matrix[i].size()-1; ++j) { //j代表列数，即第i行第j个元素，注意：从零开始，不用检查尾元素
                if (matrix[i][j]!=matrix[i+1][j+1]) {
                    return false;
                }
            }
        }
        return true;
    }
};   
  

题目：https://leetcode-cn.com/problems/pascals-triangle-ii/
  给定一个非负索引 k，其中 k ≤ 33，返回杨辉三角的第 k 行。在杨辉三角中，每个数是它左上方和右上方的数的和。
          1
          
        1   1
      
      1   2   1
       （1+1）
   1    3   3   1
      （1+2/2+1）
1     4   6   4   1
    （1+3/3+3/3+1）
    
示例:
  输入: 3
  输出: [1,3,3,1]
  
思路：滚动数组
  每一行数组都比上一行数组多一个数，而且每行的第一位和最后一位都是1， 其余数字都是上一行数组对应位置和前一位置的数字的和。
  即： a[i][j] = a[i-1][j] + a[i-1][j-1] 
  例如A[4][2]= A[3][2]+A[3][1]
  
代码：
    class Solution {
    public:
      vector<int> getRow(int rowIndex) {
         vector<int> array; 
         for(int i=0;i<=rowIndex;i++){ 
            for (int j = i - 1; j > 0; j--){ 
                array[j] = array[j - 1] + array[j]; 
            } 
            array.push_back(1); 
         } 
        return array;
      }
  };


描述：
    给定长度为 2n 的数组, 你的任务是将这些数分成 n 对, 例如 (a1, b1), (a2, b2), ..., (an, bn) ，使得从1 到 n 的 min(ai, bi) 总和最大。

示例 1:
    输入: [1,4,3,2]
    输出: 4
解释: n 等于 2, 最大总和为 4 = min(1, 2) + min(3, 4).
  提示:
    1、n 是正整数,范围在 [1, 10000].
    2、数组中的元素范围在 [-10000, 10000].
    
    
思路：
    给定一个含有2n数组，两两配对取最小值，然后最小值之和最大。
    想要最小值之和最大，就得保证每一组得损失最小，即两个数之间差值最小。综上，先对数组进行排序，排序后数组奇数位上的和即为所求
    
代码：
    class Solution {
    public:
      int arrayPairSum(vector<int>& nums) {
        int res = 0, n = nums.size();
        sort(nums.begin(), nums.end()); //数组排序，sort函数在C++中，对给定区间所有元素进行排序。
        for (int i = 0; i < n; i += 2) {
            res += nums[i];
        }
        return res;
      }
    };


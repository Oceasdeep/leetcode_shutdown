题目：
    在MATLAB中，有一个非常有用的函数 reshape，它可以将一个矩阵重塑为另一个大小不同的新矩阵，但保留其原始数据。
    给出一个由二维数组表示的矩阵，以及两个正整数r和c，分别表示想要的重构的矩阵的行数和列数。重构后的矩阵需要将
    原始矩阵的所有元素以相同的行遍历顺序填充。如果具有给定参数的reshape操作是可行且合理的，则输出新的重塑矩阵；
    否则，输出原始矩阵。
示例 1:
  输入: 
  nums = [[1,2],[3,4]]
  r = 1, c = 4
  输出: 
  [[1,2,3,4]]
解释:
  行遍历nums的结果是 [1,2,3,4]。新的矩阵是 1 * 4 矩阵, 用之前的元素值一行一行填充新矩阵。

示例 2:
  输入: 
  nums = [[1,2],[3,4]]
  r = 2, c = 4
  输出: 
  [[1,2],[3,4]]
解释:
  没有办法将 2 * 2 矩阵转化为 2 * 4 矩阵。 所以输出原矩阵。


思路：
    先判断给定数组是否能重塑成给定的大小，就是看两者的元素总数是否相同，直接行数乘以列数即可，
    然后新建一个目标大小的数组，并开始遍历，对于每个位置，先转为拉直后的一维坐标，
    然后在算出在原数组中的对应位置赋值过来即可，
    
代码：
    class Solution {
    public:
      vector<vector<int>> matrixReshape(vector<vector<int>>& nums, int r, int c) {
        int m = nums.size(), n = nums[0].size();
        if (m * n != r * c) return nums;
        vector<vector<int>> res(r, vector<int>(c));
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j) {
                int k = i * c + j;
                res[i][j] = nums[k / n][k % n];
            }
        }
        return res;
    }
};    
